/*Pair sum to 0

Given a random integer array A of size N. Find and print the pair of elements in the array which sum to 0.
Array A can contain duplicate elements.
While printing a pair, print the smaller element first.
That is, if a valid pair is (6, -6) print "-6 6". There is no constraint that out of 5 pairs which have to be printed in 1st line. You can print pairs in any order, just be careful about the order of elements in a pair.
Input format :
Line 1 : Integer N (Array size)
Line 2 : Array elements (separated by space)
Output format :
Line 1 : Pair 1 elements (separated by space)
Line 2 : Pair 2 elements (separated by space)
Line 3 : and so on
Constraints :
0 <= N <= 10^4

*/

 	#include<map>
	void PairSum(int *input, int n) {	 
		
	/* Don't write main().
     	* the input array is already passed as function argument.
     	* Don't need to return anything. Print the desired pairs in the function itself.
     	*/
     	map<int,int> m;
        for(int i=0;i<n;i++)
        {
            m[input[i]]=m[input[i]]+1;
        }
        map<int,int>:: iterator it;
         map<int,int>:: iterator it1;
        for(it=m.begin();it!=m.end();it++)
        {
            it1=m.find(-(it->first));
            if(it1!=m.end())
            {
                int j=(it1->second)*(it->second);
                for(int i=0;i<j;i++)
                {
                    cout<<it->first<<" "<<it1->first<<endl;
                    it->second=0;
                    it1->second=0;
                }
            }
           
            
        }
     	
     	
 	}

